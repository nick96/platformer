name: CI

on: [push]
jobs:
  build_test:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - windows-latest
          # - macos-latest
    name: ${{ matrix.platform }} build/test
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          sudo apt-get install -y gcc pkg-config openssl libasound2-dev build-essential \
              python3 libfreetype6-dev libexpat1-dev libxcb-composite0-dev libssl-dev libx11-dev
        if: matrix.platform ==  'ubuntu-latest'

      - name: Setup rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
            path: target
            key: v1-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo check
        run: cargo check --features vulkan
        if: matrix.platform != 'macos-latest'
      - name: Run cargo check
        run: cargo check --features metal
        if: matrix.platform == 'macos-latest'

      - name: Run rustfmt in check mode
        run: cargo fmt -- --check

      - name: Install clippy
        run: |
          rustup update
          rustup component add clippy

      - name: Run clippy
        run: cargo clippy --features vulkan -- -D warnings
        if: matrix.platform != 'macos-latest'
      - name: Run clippy
        run: cargo clippy --features metal -- -D warnings
        if: matrix.platform == 'macos-latest'

      - name: Run tests
        run: cargo test --features vulkan
        if: matrix.platform != 'macos-latest'
      - name: Run tests
        run: cargo test --features metal
        if: matrix.platform == 'macos-latest'
